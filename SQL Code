--OLIST E-COMMERCE STORE ANALYSIS
--1: What is the total revenue generated by Olist, and how has it changed over time?
SELECT 
	SUM(payment_value) AS total_revenue, YEAR(O.order_approved_at) AS year
FROM [projects].dbo.olist_order_payments_dataset P
JOIN [projects].dbo.olist_orders_dataset O
ON O.order_id=P.order_id
WHERE O.order_approved_at IS NOT NULL and O.order_status!='CANCELED'
GROUP BY YEAR(O.order_approved_at)

--2: How many orders were placed on Olist, and how does this vary by month or season?
SELECT
	COUNT(order_id)as no_orders_places, MONTH(order_purchase_timestamp)AS month
FROM [projects].dbo.olist_orders_dataset
GROUP BY MONTH(order_purchase_timestamp)
ORDER BY no_orders_places DESC

--The month of August had the most number of orders
SELECT
	COUNT(order_id)as no_orders_places, YEAR(order_purchase_timestamp)AS YEAR
FROM [projects].dbo.olist_orders_dataset
GROUP BY YEAR(order_purchase_timestamp)
ORDER BY no_orders_places DESC

--3: What are the most popular product categories on Olist, and how do their sales volumes compare to each other?
SELECT 
	column2, COUNT(O.order_id)as no_orders, SUM(payment_value)AS total_revenue
FROM [projects].dbo.olist_order_items_dataset O
JOIN [projects].dbo.olist_orders_dataset K
ON O.order_id=K.order_id
JOIN [projects].dbo.olist_order_payments_dataset D
ON O.order_id=D.order_id
JOIN [projects].dbo.olist_products_dataset P
ON O.product_id=P.product_id
JOIN [projects].dbo.product_category_name_translation C
ON P.product_category_name=C.column1
WHERE K.order_approved_at is not null AND k.order_status!='canceled'
GROUP BY column2
ORDER BY total_revenue DESC

--4: What is the average order value (AOV) on Olist, and how does this vary by product category or payment method?
--BY PRODUCT CATEGORY
SELECT 
	--column2,
	(SUM(P.payment_value)/COUNT(O.order_id))AS AOV 
FROM [projects].dbo.olist_order_payments_dataset P
JOIN [projects].dbo.olist_order_items_dataset O
ON P.order_id=O.order_id
JOIN [projects].dbo.olist_products_dataset R
ON O.product_id=R.product_id
JOIN [projects].dbo.product_category_name_translation C
ON R.product_category_name=C.column1
--GROUP BY column2
--ORDER BY AOV DESC

--BY PAYMENT METHOD
SELECT 
	payment_type, (SUM(P.payment_value)/COUNT(order_id))AS AOV 
FROM [projects].dbo.olist_order_payments_dataset P
GROUP BY payment_type
ORDER BY AOV DESC
--The most money spent is paid using credit cards. The store could use discount codes or redeemable loyalty points for those using credit cards to get more and more people to use it.
--understand what boletos are

--5: How many sellers are active on Olist, and how does this number change over time?
;WITH active AS
(
SELECT 
		S.seller_id,R.order_status, R.order_purchase_timestamp
FROM [projects].dbo.olist_order_items_dataset O
JOIN [projects].dbo.olist_orders_dataset R
ON O.order_id=R.order_id
JOIN [projects].dbo.olist_sellers_dataset S
ON O.seller_id=S.seller_id
GROUP BY s.seller_id,R.order_status, R.order_purchase_timestamp
HAVING R.order_status='delivered' AND (DAY(r.order_purchase_timestamp)-max(DAY(r.order_purchase_timestamp)))<=30
)
SELECT 
COUNT(DISTINCT seller_id) AS active_sellers 
FROM active


--6: What is the distribution of seller ratings on Olist, and how does this impact sales performance?
SELECT review_score,
	CASE WHEN r.review_score=5 THEN 'Excellent'
		 WHEN r.review_score=4 THEN 'Good'
		 WHEN r.review_score=3 THEN 'Average'
		 WHEN r.review_score=2 THEN 'Bad'
		 WHEN r.review_score=1 THEN 'Very Bad'
		 END AS rating,
	SUM(payment_value) as total_revenue, COUNT(o.order_id) as no_orders, (SUM(payment_value)/COUNT(o.order_id)) as AOV
FROM [projects].dbo.olist_order_reviews_dataset R
JOIN [projects].dbo.olist_order_payments_dataset P
ON r.order_id=p.order_id
JOIN [projects].dbo.olist_orders_dataset O
ON r.order_id=o.order_id
GROUP BY review_score
ORDER BY AOV DESC
--Explain difference between revenue and aov and how rating affects that

--7: How many customers have made repeat purchases on Olist, and what percentage of totalsales do they account for?
--no of customers with repeat purchases
;WITH repeat_customers AS
(
SELECT
	C.customer_unique_id, COUNT(DISTINCT O.order_id) AS no_orders
FROM  [projects].dbo.olist_customers_dataset C
JOIN [projects].dbo.olist_orders_dataset O
ON O.customer_id=C.customer_id
GROUP BY C.customer_unique_id
HAVING COUNT(DISTINCT O.order_id) >1
)
SELECT COUNT(DISTINCT customer_unique_id)AS no_repeat_purchases 
FROM repeat_customers

--percentage of total sales that they account for
 
;WITH repeat_total_sales AS
(
SELECT 
	SUM(payment_value) AS repeat_sales
FROM [projects].dbo.olist_order_payments_dataset P
JOIN [projects].dbo.olist_orders_dataset O
ON P.order_id=O.order_id
JOIN [projects].dbo.olist_customers_dataset C
ON O.customer_id=C.customer_id
WHERE C.customer_unique_id IN(SELECT customer_unique_id FROM
								 (
									SELECT C.customer_unique_id, COUNT(DISTINCT O.order_id) AS no_orders
									FROM  [projects].dbo.olist_customers_dataset C
									JOIN [projects].dbo.olist_orders_dataset O
									ON O.customer_id=C.customer_id
									GROUP BY C.customer_unique_id
									HAVING COUNT(DISTINCT O.order_id) >1 ) SUB)
),
total_sales AS
(
	SELECT 
		SUM(payment_value) AS total_revenue
	FROM [projects].dbo.olist_order_payments_dataset P
	JOIN [projects].dbo.olist_orders_dataset O
	ON O.order_id=P.order_id
	WHERE O.order_approved_at IS NOT NULL and O.order_status!='CANCELED'
)
SELECT (repeat_sales/total_revenue)*100 AS percent_total_revenue
FROM repeat_total_sales
CROSS JOIN  total_sales
--ONLY 6% OF THE SALES IS FROM REPEAT CUSTOMERS. MOST OF THE BUYERS ARE ONE TIME CUSTOMERS.

--8: What is the average customer rating for products sold on Olist, and how does this impact sales performance?
SELECT 
	column2, AVG(review_score) AS avg_score, SUM(payment_value)AS revenue, AVG(payment_value) as avg_revenue
FROM  [projects].dbo.olist_order_reviews_dataset R
INNER JOIN [projects].dbo.olist_orders_dataset D
ON R.order_id=D.order_id
INNER JOIN [projects].dbo.olist_order_payments_dataset P
ON D.order_id=P.order_id
INNER JOIN [projects].dbo.olist_order_items_dataset O
ON P.order_id=O.order_id
INNER JOIN [projects].dbo.olist_products_dataset T
ON O.product_id=T.product_id
INNER JOIN [projects].dbo.product_category_name_translation C
ON T.product_category_name=C.column1
WHERE d.order_status!='canceled' AND D.order_approved_at IS NOT NULL
GROUP BY column2
ORDER BY avg_score ASC

--9: What is the average order cancellation rate on Olist, and how does this impact seller performance?.
;WITH canceled AS
(
	SELECT COUNT(order_id) as canceled_orders
	FROM [projects].dbo.olist_orders_dataset
	WHERE order_status='canceled'
), total_orders AS
(
	SELECT COUNT(*) AS total
	FROM  [projects].dbo.olist_orders_dataset 
)
SELECT (canceled_orders/total)*100 AS cancellation_rate
FROM canceled
CROSS JOIN total_orders

--10: What are the top-selling products on Olist, and how have their sales trends changed over time?
--sales by product category
SELECT 
	column2, SUM(payment_value)AS revenue, AVG(payment_value) as avg_revenue, COUNT(O.order_item_id) AS no_orders
FROM  [projects].dbo.olist_order_payments_dataset P
JOIN [projects].dbo.olist_order_items_dataset O
ON P.order_id=O.order_id
JOIN [projects].dbo.olist_products_dataset R
ON O.product_id=R.product_id
JOIN [projects].dbo.product_category_name_translation C
ON R.product_category_name=C.column1
GROUP BY column2
ORDER BY no_orders DESC


--11: Which payment methods are most commonly used by Olist customers, and how does this vary by product category or geographic region?
--by product category
SELECT 
	payment_type, COUNT(*) AS NO_ORDERS
FROM  [projects].dbo.olist_order_payments_dataset P
GROUP BY payment_type
ORDER BY NO_ORDERS DESC

--By geographic region 
SELECT 
	 c.customer_state, COUNT(*) AS NO_ORDERS,payment_type
FROM  [projects].dbo.olist_order_payments_dataset P
JOIN [projects].dbo.olist_orders_dataset O
ON P.order_id=O.order_id
JOIN [projects].dbo.olist_customers_dataset C
ON O.customer_id=C.customer_id
JOIN [projects].dbo.olist_geolocation_dataset G
ON G.geolocation_zip_code_prefix=C.customer_zip_code_prefix
GROUP BY c.customer_state,payment_type
ORDER BY NO_ORDERS DESC

--12.  How do customer reviews and ratings affect sales and product performance on Olist?
--similar interpretation in question 6

--13: Which product categories have the highest profit margins on Olist, and how can the company increase profitability across
--different categories?
SELECT 
	column2, (SUM(payment_value)-SUM(O.price)+SUM(O.freight_value))/SUM(payment_value)*100 AS profit_margin
FROM [projects].dbo.olist_order_payments_dataset P
JOIN [projects].dbo.olist_order_items_dataset O
ON P.order_id=O.order_id
JOIN [projects].dbo.olist_products_dataset R
ON O.product_id=R.product_id
JOIN [projects].dbo.product_category_name_translation C
ON R.product_category_name=C.column1
GROUP BY column2
ORDER BY profit_margin DESC

--15: Geolocation having high customer density. Calculate customer retention rate according to geolocations.
;WITH repeat_customers AS
(
SELECT customer_state, COUNT(customer_unique_id) AS repeats
FROM [projects].dbo.olist_customers_dataset
WHERE customer_unique_id IN ( SELECT customer_unique_id FROM(

								SELECT C.customer_unique_id, COUNT(DISTINCT O.order_id) AS no_orders
								FROM  [projects].dbo.olist_customers_dataset C
								JOIN [projects].dbo.olist_orders_dataset O
								ON O.customer_id=C.customer_id
								GROUP BY C.customer_unique_id
								HAVING COUNT(DISTINCT O.order_id) >1)SUB)
							
GROUP BY customer_state
),
total_customers AS
(
	SELECT customer_state, COUNT(DISTINCT customer_unique_id) AS TOTAL
	FROM [projects].dbo.olist_customers_dataset
	GROUP BY customer_state

)
SELECT r.customer_state, (CAST(R.repeats AS decimal)/cast (T.TOTAL as decimal))*100 AS customer_retention_rate
FROM repeat_customers R
JOIN total_customers T
ON r.customer_state=t.customer_state
ORDER BY 2 DESC
